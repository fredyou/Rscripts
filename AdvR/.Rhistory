test=data.frame(x=1:10,y=2:11)
subset(test,,"")
subset(test,,NA)
substitute(1)
class(substitute(1))
substitute(x)
class(substitute(x))
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
if(!missing(select)){
return(df[judge &!is.na(judge),deparse(substitute(select)),drop=F])
}else{
select=ifelse(is.numeric(substitute(select)),substitute(select),deparse(substitute(select)))
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,,)
subset3(test,,1)
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
if(!missing(select)){
return(df[judge &!is.na(judge),deparse(substitute(select)),drop=F])
}else{
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,,1)
is.numeric(substitute(1))
x=1
x=x
x
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge &!is.na(judge),deparse(substitute(select)),drop=F])
}else{
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,,1)
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge &!is.na(judge),select,drop=F])
}else{
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,,1)
subset3(test,,2)
subset3(test,,y)
subset3(test,y>2,y)
eval(substitute(y>2),test)
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
print(judge)
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge &!is.na(judge),select,drop=F])
}else{
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,y>2,y)
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
print(substitute(con))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge &!is.na(judge),select,drop=F])
}else{
return(df[judge &!is.na(judge),,drop=F])
}
}
subset3(test,y>2,y)
subset3(x,x>2)
test[c(FALSE,TRUE),,drop=F]
subset3=function(df,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
print(substitute(con))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(df[judge ,select,drop=F])
}else{
return(df[judge ,,drop=F])
}
}
subset3(x,x>2)
test[FALSE,,drop=F]
fd
df
subset3=function(dataf,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(df)[1]),eval(substitute(con),df))
print(eval(substitute(con),df))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(dataf[judge ,select,drop=F])
}else{
return(dataf[judge ,,drop=F])
}
}
subset3(x,x>2)
subset3=function(dataf,con,select){
judge= ifelse(missing(con),rep(TRUE,dim(dataf)[1]),eval(substitute(con),dataf))
print(eval(substitute(con),dataf))
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(dataf[judge ,select,drop=F])
}else{
return(dataf[judge ,,drop=F])
}
}
subset3(x,x>2)
test[FALSE, ,drop=F]
test[FALSE,,drop=F]
test2=function(df,x){eval(substitute(x),df)}
test2(test,x>2)
test2=function(df,x){j=eval(substitute(x),df);return(df[j,,drop=F])}
test2(test,x>2)
subset3=function(dataf,con,select){
judge<- if(missing(con)){
rep(TRUE,dim(dataf)[1])
}else{eval(substitute(con),dataf)}
#Here we cannot use ifelse() for it only return vector length of 1
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(dataf[judge,select,drop=F])
}else{
return(dataf[judge,,drop=F])
}
}
subset3(test,x>2)
subset3(test,x>2,1)
subset3(test,x>2,2)
subset3(test,,2)
subset3=function(dataf,con,select){
judge<- if(missing(con)){
rep(TRUE,dim(dataf)[1])
}else{eval(substitute(con),dataf)}
#Here we cannot use ifelse() for it only return vector length of 1
if(!missing(select)){
select=ifelse(is.numeric(substitute(select)),select,deparse(substitute(select)))
return(dataf[judge & !is.na(judge),select,drop=F])
}else{
return(dataf[judge & !is.na(judge),,drop=F])
}
}
subset3(test,,2)
test2=function(df,vars){}
test2=function(df,vars){setNames(as.list(seq_along(df)), names(df))}
test2(test,x)
names(test)
seq_along(test)
var_pos=test2(test,x)
substitute(x)
vars=substitute(x)
eval(vars,var_pos)
vars
var_pos
subset3(test,,-x)
subset(test,,-x)
