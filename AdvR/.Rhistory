}
subscramble(sample_df, a >= 4) #Failed
outlayer=function(x,con){
#env=parent.frame()
subscramble(x,capCon(con))
}
outlayer(sample_df,a>=4)
capCon(a>=4,parent.frame())
class(capCon(a>=4,parent.frame()))
class?"name"
environment()
environment(capCon(a>=4,parent.frame()))
as.environment(capCon(a>=4,parent.frame()))
parent.env(capCon(a>=4,parent.frame()))
subset2_q
subscramble(sample_df, a >= 4) #Failed
subscramble(x,capCon(con))
subscramble(x,con)
subscramble
outlayer=function(x,con){
#env=parent.frame()
subscramble(x,con)
}
outlayer(sample_df,a>=4)
capCon<-function(condition,env=parent.frame()){
substitute(condition,env)
}
subset2_q<-function(df,con,env=parent.frame()){
r<-eval(con,df,env) #to get what con really is ,envir should be parent call
df[r,]
}
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,capCon(condition)))
}
outlayer=function(x,con){
#env=parent.frame()
subscramble(x,con)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,capCon(condition,env),env))
}
outlayer=function(x,con){
env=parent.frame()
subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition) {
scramble(subset2_q(x, capCon(condition)))
}
subscramble(sample_df, a >= 4) #Failed
outlayer=function(x,con){
con=capCon(con)
subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
con=capCon(con)
subscramble(x,con)
}
outlayer(sample_df,a>=4)
subscramble
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,capCon(condition,env),env))
}
outlayer=function(x,con){
con=capCon(con)
subscramble(x,con)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
con=capCon(con)
subscramble(x,con)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
con=capCon(con)
env=parent.frame()
subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
con
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,condition){
env=parent.frame()
condition=capCon(condition,env)
condition
subscramble(x,condition,env)
}
outlayer(sample_df,a>=4)
subset2_q
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
con
subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
con
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
capCon<-function(condition,env=parent.frame()){
substitute(condition,env)
}
subset2_q<-function(df,con,env=parent.frame()){
r<-eval(con,df,env) #to get what con really is ,envir should be parent call
df[r,]
}
subscramble <- function(x, condition,env=parent.frame()) {
scramble(subset2_q(x,capCon(condition)))
}
outlayer=function(x,con){
#env=parent.frame()
subscramble(x,con)
}
outlayer(sample_df,a>=4) #con not found!
debugonce(outlayer)
outlayer(sample_df,a>=4) #con not found!
debugonce(subset2_q)
outlayer(sample_df,a>=4) #con not found!
con
env
df
con=substitute(a>=1)
r
outlayer=function(x,con){
env=parent.frame()
con=capCon(con,env)
substitute(con)
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
#con=capCon(con,env)
substitute(con)
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
con=capCon(con)
con
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
capCon<-function(condition){
substitute(condition)
}
outlayer=function(x,con){
env=parent.frame()
con=capCon(con)
con
#subscramble(x,con,env)
}
outlayer(sample_df,a>=4)
outlayer=function(x,con){
subscramble(x,capCon(con))
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition,env=parent.frame()) {
print(condition)
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
subscramble(x,capCon(con))
}
outlayer(sample_df,a>=4)
outlayer(sample_df,a>=4)
outlayer=function(x,con){
environment(capCon(con))
#subscramble(x,capCon(con))
}
outlayer(sample_df,a>=4)
capCon<-function(condition){
deparse(substitute(condition))
}
?eval
eval("1+!")
eval("1+1")
eval("1+1",text=T)
capCon<-function(condition){
deparse(substitute(condition))
}
subset2_q<-function(df,con,env=parent.frame()){
r<-eval(parse(text=con),df,env) #to get what con really is ,envir should be parent call
df[r,]
}
subscramble <- function(x, condition,env=parent.frame()) {
print(condition)
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
env=parent.frame()
#subscramble(x,capCon(con))
}
outlayer(sample_df,a>=4)
outlayer(sample_df,a>=4)
outlayer=function(x,con){
env=parent.frame()
subscramble(x,capCon(con),env)
}
outlayer(sample_df,a>=4)
test=function(...){substitute(...)}
f=function(con){test(con)}
f(a>=2)
test=function(...,env=parent.frame()){substitute(...,env)}
f(a>=2)
test=function(...,env=parent.frame()){deparse(...)}
f(a>=2)
a
rm(a)
test=function(...,env=parent.frame()){deparse(...)}
f(a>=2)
test=function(...,env=parent.frame()){deparse(substitute(...))}
f(a>=2)
outlayer=function(x,con){
subscramble(x,substitute(con),env)
}
outlayer=function(x,con){
subscramble(x,substitute(con),env=parent.frame())
}
outlayer(sample_df,a>=4)
subset2_q<-function(df,con,env=parent.frame()){
r<-eval(con,df,env) #to get what con really is ,envir should be parent call
df[r,]
}
subscramble <- function(x, condition,env=parent.frame()) {
print(condition)
scramble(subset2_q(x,condition,env))
}
outlayer=function(x,con){
subscramble(x,substitute(con),env=parent.frame())
}
outlayer(sample_df,a>=4)
subscramble <- function(x, condition) {
print(condition)
scramble(subset2_q(x,condition))
}
outlayer=function(x,con){
subscramble(x,substitute(con))
}
outlayer(sample_df,a>=4)
subset2_q<-function(df,con){
r<-eval(con,df,parent.frame()) #to get what con really is ,envir should be parent call
df[r,]
}
subscramble
outlayer
outlayer(sample_df,a>=4)
expression(con)
expression(a>3)
?expression
y=2
expression(a>y)
outlayer(sample_df,a>=y)
outlayer
sample_df
c=3
outlayer(sample_df,a>=3)
outlayer(sample_df,a>=c)
c=1
outlayer(sample_df,a>=c)
a=3
outlayer(sample_df,a>=c)
sample_df
outlayer(sample_df,a>=a)
subset2_q<-function(df,con){
r<-eval(con,df,parent.frame()) #to get what con really is ,envir should be parent call
df[r,]
}
subset2 <- function(x, condition) {
subset2_q(x, substitute(condition))
}
subscramble <- function(x, condition) {
condition <- substitute(condition)
scramble(subset2_q(x, condition))
}
outlayer(sample_df,a>=a)
subscramble(sample_df, a >= a)
a
a
sample_df
test=function(...){substitute(list(...))}
test(a>=2,a=2)
test=function(...){as.list(substitute(list(...)))[-1]}
test(a>=2,a=2)
test(a>=a,a=2)
eval(substitute(a>=a),sample_df)
rebind(a)
test=function(con=substitute(con)){return(con)}
test(a>=4)
test=function(substitute(con)){return(con)}
test=function(con){return(expression(con))}
test(a>=4)
test=function(con){return(as.expression(con))}
test(a>=4)
subset2_q
subset2_q(sample_df,substitute(a>=2))
subset2_q(sample_df,substitute(a>=3))
subset2_q(sample_df,substitute(a>=a))
env=new.env()
env$c=6
env$c=4
subset2_q(sample_df,substitute(a>=c))
c
subset2_q <- function(x, cond, env = parent.frame()) {
r <- eval(cond, x, env)
x[r, ]
}
c=3
subset2_q(sample_df,substitute(a>=c))
sample_df
subset2_q(sample_df,substitute(a>=c))
subset2_q <- function(x, cond) {
r <- eval(cond, x, parent.frame())
x[r, ]
}
subset2_q(sample_df,substitute(a>=c)) #use 3 as value of c
subset2_q(sample_df,substitute(a>=c),env=e)
e=new.env()
e$c=4
subset2_q(sample_df,substitute(a>=c),env=e)
e
e$c
subset2_q(sample_df,substitute(a>=c),env=e)
subset2_q <- function(x, cond, env = parent.frame()) {
r <- eval(cond, x, env)
x[r, ]
}
subset2_q(sample_df,substitute(a>=c),env=e)
eval(substitute(a>=c),sample_df,envir = e)
e
is.environment(e)
eval(substitute(c),sample_df,envir = e)
eval(substitute(c),envir = e)
eval(substitute(c>3),envir = e)
e$sample_df=sample_df
subset2_q(sample_df,substitute(a>=c),env=e)
sample_df
c
e$c
eval(a,sample_df,e)
a
e
\e
e
e
e
e
e
e
eval(a,sample_df,envir = e)
eval(a,sample_df,enclos = e)
e
e$a
eval(a,envir = e$sample_df,enclos = e)
eval(a,envir = e$sample_df,enclos = e)
eval(c,envir = e$sample_df,enclos = e)
c
c
e$c
ls(envir = e)
eval(substitute(e),envir = e$sample_df,enclos = e)
eval(substitute(c),envir = e$sample_df,enclos = e)
eval(substitute(c),envir = sample_df,enclos = e)
eval(substitute(c)enclos = e)
eval(substitute(c),enclos = e)
eval(substitute(a),enclos = e)
eval(substitute(a),sample_df,enclos = e)
eval(substitute(c),sample_df,enclos = e)
eval(substitute(a>=c),sample_df,enclos = e)
sample_df
with(e$sample_df,eval(substitute(a>=c),enclose=e))
?eval
eval
evalq(c,sample_df,enclos = e)
evalq(e$c,sample_df,enclos = e)
function(a>=c){c=4;subset2_q(sample_df,substitute(con))}
test=function(a>=c){c=4;subset2_q(sample_df,substitute(con))}
test=function(con){c=4;subset2_q(sample_df,substitute(con))}
test(a>=c)
c
subset2_q
c
test=function(con){c=4;subset2_q(sample_df,substitute(con),parent.frame())}
test(a>=c)
sys.frame()
test=function(con){c=4;subset2_q(sample_df,substitute(con),parent.frame());get(c,envir = parent.frame())}
test(a>=c)
test=function(con){c=4;subset2_q(sample_df,substitute(con),parent.frame());get("c",envir = parent.frame())}
test(a>=c)
c
test=function(con){c=4;subset2_q(sample_df,substitute(con),parent.frame());print(parent.frame())}
c
test(a>=c)
test=function(con){c=4;subset2_q(sample_df,substitute(con),parent.frame());print(environment())}
test(a>=c)
environment(e)
as.environment(e)
e
e
test=function(con){c=4;subset2_q(sample_df,substitute(con),environment());}
test(a>=c)
test=function(con){c=4;subset2_q(sample_df,substitute(con),environment());get("c",environment())}
test(a>=c)
test
test=function(con){c=4;subset2_q(sample_df,substitute(con,environment()),environment());get("c",environment())}
test
test(a>=c)
test=function(con){c=4;subset2_q(sample_df,substitute(con,environment()),environment());}
test(a>=c)
test(a>=c)
sample_df
test(a>=4)
con
test=function(con){c=4;subset2_q(sample_df,quote(substitute(con,environment())),environment());}
test(a>=4)
eval(c,enclos=e)
c
ls()
e=new.env(parent=parent.frame())
parent.env(.GlobalEnv)
attach(e)
e
e$c=4
eval(c,e)
eval(c,enclos=e)
get("c",e)
ls(envir = .GlobalEnv)
parent.env()
parent.env(globalenv())
eval(e)
evalq(e)
eval(c,e)
eval(e$c,e)
eval(expression(c),e)
eval(substitute(e),e)
eval(substitute(c),e)
c
c
subsetw_!
subset2_q()
subset2_q
e=new.env()
e$c=4
eval(substitute(c),e)
c
eval(c,e)
subset2_q(sample_df,substitute(a>=c),env=e)
subset2_q
subset2_q(sample_df,expression(a>=c),env=e)
debugonce
debugonce(subset2_q)
subset2_q(sample_df,expression(a>=c),env=e)
cond
env
e
eval(cond,x,e)
sample_df
debugonce
debugonce(subset2_q)
subset2_q(sample_df,expression(a>=c),env=e)
print(c)
eval(cond,e)
eval(c,e)
eval(expression(c),e)
eval(c,e)
eval(expression(c),e)
eval(expression(ac),e)
eval(expression(a>=c),e)
eval(expression(a>=c),sample_df,e)
sample_df
subset2_q(sample_df,expression(a>=d),env=e)
e$d=4
subset2_q(sample_df,expression(a>=d),env=e)
